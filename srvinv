#!/usr/bin/env python
'''
srvinv - a server inventory

usage examples:
---------------
srvinv get srv srvid --attribute interfaces: returns a srvid's interfaces formatted as json
srvinv set srv srvid --attribute is_provisioned --value "true": sets is_provisioned to true on a srvid
srvinv register srv srvid: will register a new srvid in inventory
srvinv delete srv srvid: will remove a srvid from inventory
'''

import argparse
import libsrvinv

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("verb",
      help="verbs to be used: get, set, register, delete",
      type=str
    )
    parser.add_argument("resource",
      help="resources to be used: env, net, srv",
      type=str
    )
    parser.add_argument("resourceid",
      help="the resource id",
      type=str
    )
    parser.add_argument("--attribute",
      help="the attribute to be accessed",
      type=str
    )
    parser.add_argument("--value",
      help="the value to be setted in an attribute",
      type=str
    )

    args = parser.parse_args()
    result = ''

    if args.verb == 'get':
      (i_ret, s_text) = libsrvinv.get(args.resource, args.resourceid, args.attribute)
      if i_ret == 0:
        print(s_text)
      elif i_ret == 1:
        print('resource not found')
      elif i_ret == 2:
        print('attribute not set')
      elif i_ret == 3:
        print('error communicating with srvinv daemon')
      else:
        print('unknown error {}'.format(i_ret))

    elif args.verb == 'set':
      if args.attribute == None:
        print('missing attribute')
      else:
        if args.value == None:
          print('missing value')
        else:
          i_ret = libsrvinv.set(args.resource, args.resourceid, args.attribute, args.value)
          if i_ret == 0:
            pass
          elif i_ret in (1, 2):
            print('error communicating with srvinv daemon')
          elif i_ret == 3:
            print('resource not found')
          else:
            print('unknown error {}'.format(i_ret))

    elif args.verb == 'register':
      i_ret = libsrvinv.register(args.resource, args.resourceid)
      if i_ret == 1:
        print('conflict: already registered')
      elif i_ret == 2:
        print('error communicating with srvinv daemon')
      elif i_ret != 0:
        print('error failed with error-code {}'.format(i_ret))

    elif args.verb == 'delete':
      i_ret = libsrvinv.delete(args.resource, args.resourceid)
      if i_ret != 0:
        print('error communicating with srvinv daemon')

    exit(result)

#[EOF]
